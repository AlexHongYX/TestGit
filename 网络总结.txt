IP地址：在网络中唯一标识一台主机
端口号：在一台主机中标识一个进程
特性：一个端口只属于一个进程，一个进程可以有多个端口号
OSI七层：应用层-表示层-会话层-传输层-网络层-链路层-物理层
TCP/IP五层：应用层-传输层-网络层-链路层-物理层
网络字节序：大端字节序
大端：低地址存高位
小端：低地址存低位
客户端：主动发起连接请求的一端
服务端：被动接收请求的一端
udp服务端：创建套接字-为套接字绑定地址信息-接收数据-发送数据
udp客户端：创建套接字-为套接字绑定地址信息-发送数据-接收数据
tcp服务端：创建套接地-为套接字绑定地址信息-开始监听-获取客户端新连接建立的socket-接收数据-发送数据
tcp客户端：创建套接字-为套接字绑定地址信息-向服务端发起连接请求-发送数据-接收数据-关闭套接字
应用层：负责应用程序之间的数据沟通
HTTP：超文本传输协议 80端口
URL：协议格式：//用户名：密码@端口/资源路径？查询字符串#片段标识符
请求方法：HEAD/PUT/POST/GET/DELETE
GET和POST区别：GET没有正文，数据放在url种；POST数据放在正文中
协议版本：0.9/1.0/1.1/2
响应状态码：1XX/2XX/3XX/4XX/5XX
HTTP协议格式：首行：请求首行：请求方法  URL  协议版本
                                     响应首行：协议版本  响应状态码  状态码描述
                          头部：以一个个键值对组成
                          空行
                          正文：向服务端提交的数据/服务端响应的数据
传输层：负责端与端之间的数据传输
UDP（DHCP，DNS）：无连接，不可靠，面向数据报
无连接，不可靠：通信不需要建立连接，只需要知道对方的地址信息就能发送数据
面向数据报：数据只能整条交付
TCP（HTTP，FTP）：面向连接，可靠传输，面向字节流
面向连接：三次握手，四次挥手
三次握手保证客户端和服务端都有收发数据的能力，如果是两次，则不保证客户端有收发数据的能力
四次挥手要等待缓冲区种数据已处理完，所以FIN和ACK不能放在一条交付
握手失败：服务器等待最后一个ACK超时后，向客户端回复RST，关闭套接字
可靠传输：1.TCP面向连接
	2.确认应答机制
	3.超时重传机制
	4.确认序号
	5.校验和
	滑动窗口：通信双方在握手时会协商最大数据传输量
	  流量控制：规定可发送的数据量，限制发送速度
	  快速重传：若有某条数据没有收到，则立即发送三条重传请求（三条是避免数据延迟达到）
	  拥塞控制：以慢启动快增长的形式传输数据量，起到对网络探测的功能
	捎带应答：将回复序号放到发送数据头中，节省一条空报文回复
	延迟应答：接收到数据后，延迟一会进行回复，用户有可能将缓冲区中数据取走，保证传输吞吐率
面向字节流：可以一点点交付，也可以一次交付完，传输灵活
粘包问题：TCP在传输层对数据格式边界不敏感
解决粘包问题：1.数据定长2.特殊字符3.不定长数据在数据头中声明长度
TCP保活机制：若双方长时间无数据往来，则每隔一段时间向对方发送一个保活探测数据报，若多条未回复，则认为连接断开
网络层：负责地址管理与路由选择
网络号：子网掩码与IP地址想与
主机号：子网掩码取反
ICMP：网络探测
链路层：负责相邻设备间的数据帧传输

浏览器输入URL：域名解析-阻止HTTP请求-搭建TCP客户端发送HTTP请求-路由选择

